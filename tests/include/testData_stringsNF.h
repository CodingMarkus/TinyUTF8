#include <stdlib.h>

/*
	Creating NFC/NFD forms:
	https://dencode.com/en/string/unicode-normalization

	Create Unicode data:
	https://www.coderstool.com/unicode-text-converter

	Create hex dumps from UTF-8 Hex:
	printf '\x..\x..\x..' | xxd -u -i | sed 's/0X/0x/g' | sed 's/^../\t/'

	Count bytes from UTF-8 Hex:
	printf '%s' '\x..\x..\x..' | tr '\' '\n' | wc -l

	Count code points from UTF-32:
	printf 'u+..u+..u+...' | tr 'u' '\n' | wc -l
*/



/*
	The following string without indention and line breaks:

	~АḂⲤ𝗗𝖤𝗙ꞠꓧȊ𝐉𝜥ꓡ𝑀𝑵Ǭ𝙿𝑄Ŗ𝑆𝒯𝖴𝘝𝘞ꓫŸ𝜡ả𝘢ƀ𝖼ḋếᵮℊ𝙝Ꭵ𝕛кιṃդⱺ𝓅𝘲𝕣𝖘ŧ𝑢ṽẉ𝘅ყž
	1234567890!@#$%^&*()-_=+[{]};:'",<.>/?~Ѧ𝙱ƇᗞΣℱԍҤ١𝔍К𝓛𝓜ƝȎ𝚸𝑄Ṛ𝓢ṮṺƲᏔꓫ𝚈𝚭𝜶Ꮟçძ𝑒𝖿𝗀ḧ𝗂𝐣ҝɭḿ𝕟𝐨𝝔𝕢ṛ𝓼тú𝔳ẃ⤬𝝲𝗓
	1234567890!@#$%^&*()-_=+[{]};:'",<.>/?
	~𝖠Β𝒞𝘋𝙴𝓕ĢȞỈ𝕵ꓗʟ𝙼ℕ০𝚸𝗤ՀꓢṰǓⅤ𝔚Ⲭ𝑌𝙕𝘢𝕤
*/
static
const char composedUTF8TestString1[ ] = {
	0x7E, 0xD0, 0x90, 0xE1, 0xB8, 0x82, 0xE2, 0xB2, 0xA4, 0xF0, 0x9D, 0x97,
	0x97, 0xF0, 0x9D, 0x96, 0xA4, 0xF0, 0x9D, 0x97, 0x99, 0xEA, 0x9E, 0xA0,
	0xEA, 0x93, 0xA7, 0xC8, 0x8A, 0xF0, 0x9D, 0x90, 0x89, 0xF0, 0x9D, 0x9C,
	0xA5, 0xEA, 0x93, 0xA1, 0xF0, 0x9D, 0x91, 0x80, 0xF0, 0x9D, 0x91, 0xB5,
	0xC7, 0xAC, 0xF0, 0x9D, 0x99, 0xBF, 0xF0, 0x9D, 0x91, 0x84, 0xC5, 0x96,
	0xF0, 0x9D, 0x91, 0x86, 0xF0, 0x9D, 0x92, 0xAF, 0xF0, 0x9D, 0x96, 0xB4,
	0xF0, 0x9D, 0x98, 0x9D, 0xF0, 0x9D, 0x98, 0x9E, 0xEA, 0x93, 0xAB, 0xC5,
	0xB8, 0xF0, 0x9D, 0x9C, 0xA1, 0xE1, 0xBA, 0xA3, 0xF0, 0x9D, 0x98, 0xA2,
	0xC6, 0x80, 0xF0, 0x9D, 0x96, 0xBC, 0xE1, 0xB8, 0x8B, 0xE1, 0xBA, 0xBF,
	0xE1, 0xB5, 0xAE, 0xE2, 0x84, 0x8A, 0xF0, 0x9D, 0x99, 0x9D, 0xE1, 0x8E,
	0xA5, 0xF0, 0x9D, 0x95, 0x9B, 0xD0, 0xBA, 0xCE, 0xB9, 0xE1, 0xB9, 0x83,
	0xD5, 0xA4, 0xE2, 0xB1, 0xBA, 0xF0, 0x9D, 0x93, 0x85, 0xF0, 0x9D, 0x98,
	0xB2, 0xF0, 0x9D, 0x95, 0xA3, 0xF0, 0x9D, 0x96, 0x98, 0xC5, 0xA7, 0xF0,
	0x9D, 0x91, 0xA2, 0xE1, 0xB9, 0xBD, 0xE1, 0xBA, 0x89, 0xF0, 0x9D, 0x98,
	0x85, 0xE1, 0x83, 0xA7, 0xC5, 0xBE, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36,
	0x37, 0x38, 0x39, 0x30, 0x21, 0x40, 0x23, 0x24, 0x25, 0x5E, 0x26, 0x2A,
	0x28, 0x29, 0x2D, 0x5F, 0x3D, 0x2B, 0x5B, 0x7B, 0x5D, 0x7D, 0x3B, 0x3A,
	0x27, 0x22, 0x2C, 0x3C, 0x2E, 0x3E, 0x2F, 0x3F, 0x7E, 0xD1, 0xA6, 0xF0,
	0x9D, 0x99, 0xB1, 0xC6, 0x87, 0xE1, 0x97, 0x9E, 0xCE, 0xA3, 0xE2, 0x84,
	0xB1, 0xD4, 0x8D, 0xD2, 0xA4, 0xD9, 0xA1, 0xF0, 0x9D, 0x94, 0x8D, 0xD0,
	0x9A, 0xF0, 0x9D, 0x93, 0x9B, 0xF0, 0x9D, 0x93, 0x9C, 0xC6, 0x9D, 0xC8,
	0x8E, 0xF0, 0x9D, 0x9A, 0xB8, 0xF0, 0x9D, 0x91, 0x84, 0xE1, 0xB9, 0x9A,
	0xF0, 0x9D, 0x93, 0xA2, 0xE1, 0xB9, 0xAE, 0xE1, 0xB9, 0xBA, 0xC6, 0xB2,
	0xE1, 0x8F, 0x94, 0xEA, 0x93, 0xAB, 0xF0, 0x9D, 0x9A, 0x88, 0xF0, 0x9D,
	0x9A, 0xAD, 0xF0, 0x9D, 0x9C, 0xB6, 0xE1, 0x8F, 0x8F, 0xC3, 0xA7, 0xE1,
	0x83, 0xAB, 0xF0, 0x9D, 0x91, 0x92, 0xF0, 0x9D, 0x96, 0xBF, 0xF0, 0x9D,
	0x97, 0x80, 0xE1, 0xB8, 0xA7, 0xF0, 0x9D, 0x97, 0x82, 0xF0, 0x9D, 0x90,
	0xA3, 0xD2, 0x9D, 0xC9, 0xAD, 0xE1, 0xB8, 0xBF, 0xF0, 0x9D, 0x95, 0x9F,
	0xF0, 0x9D, 0x90, 0xA8, 0xF0, 0x9D, 0x9D, 0x94, 0xF0, 0x9D, 0x95, 0xA2,
	0xE1, 0xB9, 0x9B, 0xF0, 0x9D, 0x93, 0xBC, 0xD1, 0x82, 0xC3, 0xBA, 0xF0,
	0x9D, 0x94, 0xB3, 0xE1, 0xBA, 0x83, 0xE2, 0xA4, 0xAC, 0xF0, 0x9D, 0x9D,
	0xB2, 0xF0, 0x9D, 0x97, 0x93, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
	0x38, 0x39, 0x30, 0x21, 0x40, 0x23, 0x24, 0x25, 0x5E, 0x26, 0x2A, 0x28,
	0x29, 0x2D, 0x5F, 0x3D, 0x2B, 0x5B, 0x7B, 0x5D, 0x7D, 0x3B, 0x3A, 0x27,
	0x22, 0x2C, 0x3C, 0x2E, 0x3E, 0x2F, 0x3F, 0x7E, 0xF0, 0x9D, 0x96, 0xA0,
	0xCE, 0x92, 0xF0, 0x9D, 0x92, 0x9E, 0xF0, 0x9D, 0x98, 0x8B, 0xF0, 0x9D,
	0x99, 0xB4, 0xF0, 0x9D, 0x93, 0x95, 0xC4, 0xA2, 0xC8, 0x9E, 0xE1, 0xBB,
	0x88, 0xF0, 0x9D, 0x95, 0xB5, 0xEA, 0x93, 0x97, 0xCA, 0x9F, 0xF0, 0x9D,
	0x99, 0xBC, 0xE2, 0x84, 0x95, 0xE0, 0xA7, 0xA6, 0xF0, 0x9D, 0x9A, 0xB8,
	0xF0, 0x9D, 0x97, 0xA4, 0xD5, 0x80, 0xEA, 0x93, 0xA2, 0xE1, 0xB9, 0xB0,
	0xC7, 0x93, 0xE2, 0x85, 0xA4, 0xF0, 0x9D, 0x94, 0x9A, 0xE2, 0xB2, 0xAC,
	0xF0, 0x9D, 0x91, 0x8C, 0xF0, 0x9D, 0x99, 0x95, 0xF0, 0x9D, 0x98, 0xA2,
	0xF0, 0x9D, 0x95, 0xA4, 0x00
}; // 508 bytes + \0, 212 code points, 212 chars

static
const char decomposedUTF8TestString1[ ] = {
	0x7E, 0xD0, 0x90, 0x42, 0xCC, 0x87, 0xE2, 0xB2, 0xA4, 0xF0, 0x9D, 0x97,
	0x97, 0xF0, 0x9D, 0x96, 0xA4, 0xF0, 0x9D, 0x97, 0x99, 0xEA, 0x9E, 0xA0,
	0xEA, 0x93, 0xA7, 0x49, 0xCC, 0x91, 0xF0, 0x9D, 0x90, 0x89, 0xF0, 0x9D,
	0x9C, 0xA5, 0xEA, 0x93, 0xA1, 0xF0, 0x9D, 0x91, 0x80, 0xF0, 0x9D, 0x91,
	0xB5, 0x4F, 0xCC, 0xA8, 0xCC, 0x84, 0xF0, 0x9D, 0x99, 0xBF, 0xF0, 0x9D,
	0x91, 0x84, 0x52, 0xCC, 0xA7, 0xF0, 0x9D, 0x91, 0x86, 0xF0, 0x9D, 0x92,
	0xAF, 0xF0, 0x9D, 0x96, 0xB4, 0xF0, 0x9D, 0x98, 0x9D, 0xF0, 0x9D, 0x98,
	0x9E, 0xEA, 0x93, 0xAB, 0x59, 0xCC, 0x88, 0xF0, 0x9D, 0x9C, 0xA1, 0x61,
	0xCC, 0x89, 0xF0, 0x9D, 0x98, 0xA2, 0xC6, 0x80, 0xF0, 0x9D, 0x96, 0xBC,
	0x64, 0xCC, 0x87, 0x65, 0xCC, 0x82, 0xCC, 0x81, 0xE1, 0xB5, 0xAE, 0xE2,
	0x84, 0x8A, 0xF0, 0x9D, 0x99, 0x9D, 0xE1, 0x8E, 0xA5, 0xF0, 0x9D, 0x95,
	0x9B, 0xD0, 0xBA, 0xCE, 0xB9, 0x6D, 0xCC, 0xA3, 0xD5, 0xA4, 0xE2, 0xB1,
	0xBA, 0xF0, 0x9D, 0x93, 0x85, 0xF0, 0x9D, 0x98, 0xB2, 0xF0, 0x9D, 0x95,
	0xA3, 0xF0, 0x9D, 0x96, 0x98, 0xC5, 0xA7, 0xF0, 0x9D, 0x91, 0xA2, 0x76,
	0xCC, 0x83, 0x77, 0xCC, 0xA3, 0xF0, 0x9D, 0x98, 0x85, 0xE1, 0x83, 0xA7,
	0x7A, 0xCC, 0x8C, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39,
	0x30, 0x21, 0x40, 0x23, 0x24, 0x25, 0x5E, 0x26, 0x2A, 0x28, 0x29, 0x2D,
	0x5F, 0x3D, 0x2B, 0x5B, 0x7B, 0x5D, 0x7D, 0x3B, 0x3A, 0x27, 0x22, 0x2C,
	0x3C, 0x2E, 0x3E, 0x2F, 0x3F, 0x7E, 0xD1, 0xA6, 0xF0, 0x9D, 0x99, 0xB1,
	0xC6, 0x87, 0xE1, 0x97, 0x9E, 0xCE, 0xA3, 0xE2, 0x84, 0xB1, 0xD4, 0x8D,
	0xD2, 0xA4, 0xD9, 0xA1, 0xF0, 0x9D, 0x94, 0x8D, 0xD0, 0x9A, 0xF0, 0x9D,
	0x93, 0x9B, 0xF0, 0x9D, 0x93, 0x9C, 0xC6, 0x9D, 0x4F, 0xCC, 0x91, 0xF0,
	0x9D, 0x9A, 0xB8, 0xF0, 0x9D, 0x91, 0x84, 0x52, 0xCC, 0xA3, 0xF0, 0x9D,
	0x93, 0xA2, 0x54, 0xCC, 0xB1, 0x55, 0xCC, 0x84, 0xCC, 0x88, 0xC6, 0xB2,
	0xE1, 0x8F, 0x94, 0xEA, 0x93, 0xAB, 0xF0, 0x9D, 0x9A, 0x88, 0xF0, 0x9D,
	0x9A, 0xAD, 0xF0, 0x9D, 0x9C, 0xB6, 0xE1, 0x8F, 0x8F, 0x63, 0xCC, 0xA7,
	0xE1, 0x83, 0xAB, 0xF0, 0x9D, 0x91, 0x92, 0xF0, 0x9D, 0x96, 0xBF, 0xF0,
	0x9D, 0x97, 0x80, 0x68, 0xCC, 0x88, 0xF0, 0x9D, 0x97, 0x82, 0xF0, 0x9D,
	0x90, 0xA3, 0xD2, 0x9D, 0xC9, 0xAD, 0x6D, 0xCC, 0x81, 0xF0, 0x9D, 0x95,
	0x9F, 0xF0, 0x9D, 0x90, 0xA8, 0xF0, 0x9D, 0x9D, 0x94, 0xF0, 0x9D, 0x95,
	0xA2, 0x72, 0xCC, 0xA3, 0xF0, 0x9D, 0x93, 0xBC, 0xD1, 0x82, 0x75, 0xCC,
	0x81, 0xF0, 0x9D, 0x94, 0xB3, 0x77, 0xCC, 0x81, 0xE2, 0xA4, 0xAC, 0xF0,
	0x9D, 0x9D, 0xB2, 0xF0, 0x9D, 0x97, 0x93, 0x31, 0x32, 0x33, 0x34, 0x35,
	0x36, 0x37, 0x38, 0x39, 0x30, 0x21, 0x40, 0x23, 0x24, 0x25, 0x5E, 0x26,
	0x2A, 0x28, 0x29, 0x2D, 0x5F, 0x3D, 0x2B, 0x5B, 0x7B, 0x5D, 0x7D, 0x3B,
	0x3A, 0x27, 0x22, 0x2C, 0x3C, 0x2E, 0x3E, 0x2F, 0x3F, 0x7E, 0xF0, 0x9D,
	0x96, 0xA0, 0xCE, 0x92, 0xF0, 0x9D, 0x92, 0x9E, 0xF0, 0x9D, 0x98, 0x8B,
	0xF0, 0x9D, 0x99, 0xB4, 0xF0, 0x9D, 0x93, 0x95, 0x47, 0xCC, 0xA7, 0x48,
	0xCC, 0x8C, 0x49, 0xCC, 0x89, 0xF0, 0x9D, 0x95, 0xB5, 0xEA, 0x93, 0x97,
	0xCA, 0x9F, 0xF0, 0x9D, 0x99, 0xBC, 0xE2, 0x84, 0x95, 0xE0, 0xA7, 0xA6,
	0xF0, 0x9D, 0x9A, 0xB8, 0xF0, 0x9D, 0x97, 0xA4, 0xD5, 0x80, 0xEA, 0x93,
	0xA2, 0x54, 0xCC, 0xAD, 0x55, 0xCC, 0x8C, 0xE2, 0x85, 0xA4, 0xF0, 0x9D,
	0x94, 0x9A, 0xE2, 0xB2, 0xAC, 0xF0, 0x9D, 0x91, 0x8C, 0xF0, 0x9D, 0x99,
	0x95, 0xF0, 0x9D, 0x98, 0xA2, 0xF0, 0x9D, 0x95, 0xA4, 0x00
}; // 525 bytes + \0, 243 code points, 212 chars



/*
	The following string without indention and line breaks:

	ăѣ𝔠ծềſģȟᎥ𝒋ǩľḿꞑȯ𝘱𝑞𝗋𝘴ȶ𝞄𝜈ψ𝒙𝘆𝚣
	1234567890!@#$%^&*()-_=+[{]};:'",<.>/?`~𝘈Ḇ𝖢𝕯٤ḞԍНǏ𝙅ƘԸⲘ𝙉০Ρ𝗤Ɍ𝓢ȚЦ𝒱Ѡ𝓧ƳȤѧᖯć𝗱ễ𝑓𝙜Ⴙ𝞲𝑗𝒌ļṃŉо𝞎𝒒ᵲꜱ𝙩ừ𝗏ŵ𝒙𝒚ź
	1234567890!@#$%^&*()-_=+[{]};:'",<.>/?
*/
static
const char composedUTF8TestString2[ ] = {
	0xC4, 0x83, 0xD1, 0xA3, 0xF0, 0x9D, 0x94, 0xA0, 0xD5, 0xAE, 0xE1, 0xBB,
	0x81, 0xC5, 0xBF, 0xC4, 0xA3, 0xC8, 0x9F, 0xE1, 0x8E, 0xA5, 0xF0, 0x9D,
	0x92, 0x8B, 0xC7, 0xA9, 0xC4, 0xBE, 0xE1, 0xB8, 0xBF, 0xEA, 0x9E, 0x91,
	0xC8, 0xAF, 0xF0, 0x9D, 0x98, 0xB1, 0xF0, 0x9D, 0x91, 0x9E, 0xF0, 0x9D,
	0x97, 0x8B, 0xF0, 0x9D, 0x98, 0xB4, 0xC8, 0xB6, 0xF0, 0x9D, 0x9E, 0x84,
	0xF0, 0x9D, 0x9C, 0x88, 0xCF, 0x88, 0xF0, 0x9D, 0x92, 0x99, 0xF0, 0x9D,
	0x98, 0x86, 0xF0, 0x9D, 0x9A, 0xA3, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36,
	0x37, 0x38, 0x39, 0x30, 0x21, 0x40, 0x23, 0x24, 0x25, 0x5E, 0x26, 0x2A,
	0x28, 0x29, 0x2D, 0x5F, 0x3D, 0x2B, 0x5B, 0x7B, 0x5D, 0x7D, 0x3B, 0x3A,
	0x27, 0x22, 0x2C, 0x3C, 0x2E, 0x3E, 0x2F, 0x3F, 0x60, 0x7E, 0xF0, 0x9D,
	0x98, 0x88, 0xE1, 0xB8, 0x86, 0xF0, 0x9D, 0x96, 0xA2, 0xF0, 0x9D, 0x95,
	0xAF, 0xD9, 0xA4, 0xE1, 0xB8, 0x9E, 0xD4, 0x8D, 0xD0, 0x9D, 0xC7, 0x8F,
	0xF0, 0x9D, 0x99, 0x85, 0xC6, 0x98, 0xD4, 0xB8, 0xE2, 0xB2, 0x98, 0xF0,
	0x9D, 0x99, 0x89, 0xE0, 0xA7, 0xA6, 0xCE, 0xA1, 0xF0, 0x9D, 0x97, 0xA4,
	0xC9, 0x8C, 0xF0, 0x9D, 0x93, 0xA2, 0xC8, 0x9A, 0xD0, 0xA6, 0xF0, 0x9D,
	0x92, 0xB1, 0xD1, 0xA0, 0xF0, 0x9D, 0x93, 0xA7, 0xC6, 0xB3, 0xC8, 0xA4,
	0xD1, 0xA7, 0xE1, 0x96, 0xAF, 0xC4, 0x87, 0xF0, 0x9D, 0x97, 0xB1, 0xE1,
	0xBB, 0x85, 0xF0, 0x9D, 0x91, 0x93, 0xF0, 0x9D, 0x99, 0x9C, 0xE1, 0x82,
	0xB9, 0xF0, 0x9D, 0x9E, 0xB2, 0xF0, 0x9D, 0x91, 0x97, 0xF0, 0x9D, 0x92,
	0x8C, 0xC4, 0xBC, 0xE1, 0xB9, 0x83, 0xC5, 0x89, 0xD0, 0xBE, 0xF0, 0x9D,
	0x9E, 0x8E, 0xF0, 0x9D, 0x92, 0x92, 0xE1, 0xB5, 0xB2, 0xEA, 0x9C, 0xB1,
	0xF0, 0x9D, 0x99, 0xA9, 0xE1, 0xBB, 0xAB, 0xF0, 0x9D, 0x97, 0x8F, 0xC5,
	0xB5, 0xF0, 0x9D, 0x92, 0x99, 0xF0, 0x9D, 0x92, 0x9A, 0xC5, 0xBA, 0x31,
	0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x21, 0x40, 0x23,
	0x24, 0x25, 0x5E, 0x26, 0x2A, 0x28, 0x29, 0x2D, 0x5F, 0x3D, 0x2B, 0x5B,
	0x7B, 0x5D, 0x7D, 0x3B, 0x3A, 0x27, 0x22, 0x2C, 0x3C, 0x2E, 0x3E, 0x2F,
	0x3F, 0x00
}; // 313 bytes + \0, 156 code points, 156 chars

static
const char decomposedUTF8TestString2[ ] = {
	0x61, 0xCC, 0x86, 0xD1, 0xA3, 0xF0, 0x9D, 0x94, 0xA0, 0xD5, 0xAE, 0x65,
	0xCC, 0x82, 0xCC, 0x80, 0xC5, 0xBF, 0x67, 0xCC, 0xA7, 0x68, 0xCC, 0x8C,
	0xE1, 0x8E, 0xA5, 0xF0, 0x9D, 0x92, 0x8B, 0x6B, 0xCC, 0x8C, 0x6C, 0xCC,
	0x8C, 0x6D, 0xCC, 0x81, 0xEA, 0x9E, 0x91, 0x6F, 0xCC, 0x87, 0xF0, 0x9D,
	0x98, 0xB1, 0xF0, 0x9D, 0x91, 0x9E, 0xF0, 0x9D, 0x97, 0x8B, 0xF0, 0x9D,
	0x98, 0xB4, 0xC8, 0xB6, 0xF0, 0x9D, 0x9E, 0x84, 0xF0, 0x9D, 0x9C, 0x88,
	0xCF, 0x88, 0xF0, 0x9D, 0x92, 0x99, 0xF0, 0x9D, 0x98, 0x86, 0xF0, 0x9D,
	0x9A, 0xA3, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30,
	0x21, 0x40, 0x23, 0x24, 0x25, 0x5E, 0x26, 0x2A, 0x28, 0x29, 0x2D, 0x5F,
	0x3D, 0x2B, 0x5B, 0x7B, 0x5D, 0x7D, 0x3B, 0x3A, 0x27, 0x22, 0x2C, 0x3C,
	0x2E, 0x3E, 0x2F, 0x3F, 0x60, 0x7E, 0xF0, 0x9D, 0x98, 0x88, 0x42, 0xCC,
	0xB1, 0xF0, 0x9D, 0x96, 0xA2, 0xF0, 0x9D, 0x95, 0xAF, 0xD9, 0xA4, 0x46,
	0xCC, 0x87, 0xD4, 0x8D, 0xD0, 0x9D, 0x49, 0xCC, 0x8C, 0xF0, 0x9D, 0x99,
	0x85, 0xC6, 0x98, 0xD4, 0xB8, 0xE2, 0xB2, 0x98, 0xF0, 0x9D, 0x99, 0x89,
	0xE0, 0xA7, 0xA6, 0xCE, 0xA1, 0xF0, 0x9D, 0x97, 0xA4, 0xC9, 0x8C, 0xF0,
	0x9D, 0x93, 0xA2, 0x54, 0xCC, 0xA6, 0xD0, 0xA6, 0xF0, 0x9D, 0x92, 0xB1,
	0xD1, 0xA0, 0xF0, 0x9D, 0x93, 0xA7, 0xC6, 0xB3, 0xC8, 0xA4, 0xD1, 0xA7,
	0xE1, 0x96, 0xAF, 0x63, 0xCC, 0x81, 0xF0, 0x9D, 0x97, 0xB1, 0x65, 0xCC,
	0x82, 0xCC, 0x83, 0xF0, 0x9D, 0x91, 0x93, 0xF0, 0x9D, 0x99, 0x9C, 0xE1,
	0x82, 0xB9, 0xF0, 0x9D, 0x9E, 0xB2, 0xF0, 0x9D, 0x91, 0x97, 0xF0, 0x9D,
	0x92, 0x8C, 0x6C, 0xCC, 0xA7, 0x6D, 0xCC, 0xA3, 0xC5, 0x89, 0xD0, 0xBE,
	0xF0, 0x9D, 0x9E, 0x8E, 0xF0, 0x9D, 0x92, 0x92, 0xE1, 0xB5, 0xB2, 0xEA,
	0x9C, 0xB1, 0xF0, 0x9D, 0x99, 0xA9, 0x75, 0xCC, 0x9B, 0xCC, 0x80, 0xF0,
	0x9D, 0x97, 0x8F, 0x77, 0xCC, 0x82, 0xF0, 0x9D, 0x92, 0x99, 0xF0, 0x9D,
	0x92, 0x9A, 0x7A, 0xCC, 0x81, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
	0x38, 0x39, 0x30, 0x21, 0x40, 0x23, 0x24, 0x25, 0x5E, 0x26, 0x2A, 0x28,
	0x29, 0x2D, 0x5F, 0x3D, 0x2B, 0x5B, 0x7B, 0x5D, 0x7D, 0x3B, 0x3A, 0x27,
	0x22, 0x2C, 0x3C, 0x2E, 0x3E, 0x2F, 0x3F, 0x00
}; // 331 bytes + \0, 178 code points, 156 chars


/*
	The following string without indention but including the line breaks:

	Quizdeltagerne spiste jordbær med fløde, mens cirkusklovnen
	Wolther spillede på xylofon.
	Falsches Üben von Xylophonmusik quält jeden größeren Zwerg
	Zwölf Boxkämpfer jagten Eva quer über den Sylter Deich
	Γαζέες καὶ μυρτιὲς δὲν θὰ βρῶ πιὰ στὸ χρυσαφὶ ξέφωτο
	Ξεσκεπάζω τὴν ψυχοφθόρα βδελυγμία
	El pingüino Wenceslao hizo kilómetros bajo exhaustiva lluvia y
	frío, añoraba a su querido cachorro.
	l'île exiguë
	Où l'obèse jury mûr
	Fête l'haï volapük,
	Âne ex aéquo au whist,
	Ôtez ce vœu déçu.
	Le cœur déçu mais l'âme plutôt naïve, Louÿs rêva de crapaüter en
	canoë au delà des îles, près du mälström où brûlent les novæ.
	D'fhuascail Íosa, Úrmhac na hÓighe Beannaithe, pór Éava agus Ádhaimh
	Árvíztűrő tükörfúrógép
	Kæmi ný öxi hér ykist þjófum nú bæði víl og ádrepa
	Sævör grét áðan því úlpan var ónýt
	いろはにほへとちりぬるを
	わかよたれそつねならむ
	うゐのおくやまけふこえて
	あさきゆめみしゑひもせす
	イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム
	ウヰノオクヤマ ケフコエテ アサキユメミシ ヱヒモセスン
	  ? דג סקרן שט בים מאוכזב ולפתע מצא לו חברה איך הקליטה
	Pchnąć w tę łódź jeża lub ośm skrzyń fig
	В чащах юга жил бы цитрус? Да, но фальшивый экземпляр!
	Съешь же ещё этих мягких французских булок да выпей чаю
	๏ เป็นมนุษย์สุดประเสริฐเลิศคุณค่า  กว่าบรรดาฝูงสัตว์เดรัจฉาน
	จงฝ่าฟันพัฒนาวิชาการ           อย่าล้างผลาญฤๅเข่นฆ่าบีฑาใคร
	ไม่ถือโทษโกรธแช่งซัดฮึดฮัดด่า     หัดอภัยเหมือนกีฬาอัชฌาสัย
	ปฏิบัติประพฤติกฎกำหนดใจ        พูดจาให้จ๊ะๆ จ๋าๆ น่าฟังเอย ฯ
	Pijamalı hasta, yağız şoföre çabucak güvendi.

*/
static
const char composedUTF8TestString3[ ] = {
	0x51, 0x75, 0x69, 0x7A, 0x64, 0x65, 0x6C, 0x74, 0x61, 0x67, 0x65, 0x72,
	0x6E, 0x65, 0x20, 0x73, 0x70, 0x69, 0x73, 0x74, 0x65, 0x20, 0x6A, 0x6F,
	0x72, 0x64, 0x62, 0xC3, 0xA6, 0x72, 0x20, 0x6D, 0x65, 0x64, 0x20, 0x66,
	0x6C, 0xC3, 0xB8, 0x64, 0x65, 0x2C, 0x20, 0x6D, 0x65, 0x6E, 0x73, 0x20,
	0x63, 0x69, 0x72, 0x6B, 0x75, 0x73, 0x6B, 0x6C, 0x6F, 0x76, 0x6E, 0x65,
	0x6E, 0x0A, 0x57, 0x6F, 0x6C, 0x74, 0x68, 0x65, 0x72, 0x20, 0x73, 0x70,
	0x69, 0x6C, 0x6C, 0x65, 0x64, 0x65, 0x20, 0x70, 0xC3, 0xA5, 0x20, 0x78,
	0x79, 0x6C, 0x6F, 0x66, 0x6F, 0x6E, 0x2E, 0x0A, 0x46, 0x61, 0x6C, 0x73,
	0x63, 0x68, 0x65, 0x73, 0x20, 0xC3, 0x9C, 0x62, 0x65, 0x6E, 0x20, 0x76,
	0x6F, 0x6E, 0x20, 0x58, 0x79, 0x6C, 0x6F, 0x70, 0x68, 0x6F, 0x6E, 0x6D,
	0x75, 0x73, 0x69, 0x6B, 0x20, 0x71, 0x75, 0xC3, 0xA4, 0x6C, 0x74, 0x20,
	0x6A, 0x65, 0x64, 0x65, 0x6E, 0x20, 0x67, 0x72, 0xC3, 0xB6, 0xC3, 0x9F,
	0x65, 0x72, 0x65, 0x6E, 0x20, 0x5A, 0x77, 0x65, 0x72, 0x67, 0x0A, 0x5A,
	0x77, 0xC3, 0xB6, 0x6C, 0x66, 0x20, 0x42, 0x6F, 0x78, 0x6B, 0xC3, 0xA4,
	0x6D, 0x70, 0x66, 0x65, 0x72, 0x20, 0x6A, 0x61, 0x67, 0x74, 0x65, 0x6E,
	0x20, 0x45, 0x76, 0x61, 0x20, 0x71, 0x75, 0x65, 0x72, 0x20, 0xC3, 0xBC,
	0x62, 0x65, 0x72, 0x20, 0x64, 0x65, 0x6E, 0x20, 0x53, 0x79, 0x6C, 0x74,
	0x65, 0x72, 0x20, 0x44, 0x65, 0x69, 0x63, 0x68, 0x0A, 0xCE, 0x93, 0xCE,
	0xB1, 0xCE, 0xB6, 0xCE, 0xAD, 0xCE, 0xB5, 0xCF, 0x82, 0x20, 0xCE, 0xBA,
	0xCE, 0xB1, 0xE1, 0xBD, 0xB6, 0x20, 0xCE, 0xBC, 0xCF, 0x85, 0xCF, 0x81,
	0xCF, 0x84, 0xCE, 0xB9, 0xE1, 0xBD, 0xB2, 0xCF, 0x82, 0x20, 0xCE, 0xB4,
	0xE1, 0xBD, 0xB2, 0xCE, 0xBD, 0x20, 0xCE, 0xB8, 0xE1, 0xBD, 0xB0, 0x20,
	0xCE, 0xB2, 0xCF, 0x81, 0xE1, 0xBF, 0xB6, 0x20, 0xCF, 0x80, 0xCE, 0xB9,
	0xE1, 0xBD, 0xB0, 0x20, 0xCF, 0x83, 0xCF, 0x84, 0xE1, 0xBD, 0xB8, 0x20,
	0xCF, 0x87, 0xCF, 0x81, 0xCF, 0x85, 0xCF, 0x83, 0xCE, 0xB1, 0xCF, 0x86,
	0xE1, 0xBD, 0xB6, 0x20, 0xCE, 0xBE, 0xCE, 0xAD, 0xCF, 0x86, 0xCF, 0x89,
	0xCF, 0x84, 0xCE, 0xBF, 0x0A, 0xCE, 0x9E, 0xCE, 0xB5, 0xCF, 0x83, 0xCE,
	0xBA, 0xCE, 0xB5, 0xCF, 0x80, 0xCE, 0xAC, 0xCE, 0xB6, 0xCF, 0x89, 0x20,
	0xCF, 0x84, 0xE1, 0xBD, 0xB4, 0xCE, 0xBD, 0x20, 0xCF, 0x88, 0xCF, 0x85,
	0xCF, 0x87, 0xCE, 0xBF, 0xCF, 0x86, 0xCE, 0xB8, 0xCF, 0x8C, 0xCF, 0x81,
	0xCE, 0xB1, 0x20, 0xCE, 0xB2, 0xCE, 0xB4, 0xCE, 0xB5, 0xCE, 0xBB, 0xCF,
	0x85, 0xCE, 0xB3, 0xCE, 0xBC, 0xCE, 0xAF, 0xCE, 0xB1, 0x0A, 0x45, 0x6C,
	0x20, 0x70, 0x69, 0x6E, 0x67, 0xC3, 0xBC, 0x69, 0x6E, 0x6F, 0x20, 0x57,
	0x65, 0x6E, 0x63, 0x65, 0x73, 0x6C, 0x61, 0x6F, 0x20, 0x68, 0x69, 0x7A,
	0x6F, 0x20, 0x6B, 0x69, 0x6C, 0xC3, 0xB3, 0x6D, 0x65, 0x74, 0x72, 0x6F,
	0x73, 0x20, 0x62, 0x61, 0x6A, 0x6F, 0x20, 0x65, 0x78, 0x68, 0x61, 0x75,
	0x73, 0x74, 0x69, 0x76, 0x61, 0x20, 0x6C, 0x6C, 0x75, 0x76, 0x69, 0x61,
	0x20, 0x79, 0x20, 0x0A, 0x66, 0x72, 0xC3, 0xAD, 0x6F, 0x2C, 0x20, 0x61,
	0xC3, 0xB1, 0x6F, 0x72, 0x61, 0x62, 0x61, 0x20, 0x61, 0x20, 0x73, 0x75,
	0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x64, 0x6F, 0x20, 0x63, 0x61, 0x63,
	0x68, 0x6F, 0x72, 0x72, 0x6F, 0x2E, 0x0A, 0x6C, 0x27, 0xC3, 0xAE, 0x6C,
	0x65, 0x20, 0x65, 0x78, 0x69, 0x67, 0x75, 0xC3, 0xAB, 0x0A, 0x4F, 0xC3,
	0xB9, 0x20, 0x6C, 0x27, 0x6F, 0x62, 0xC3, 0xA8, 0x73, 0x65, 0x20, 0x6A,
	0x75, 0x72, 0x79, 0x20, 0x6D, 0xC3, 0xBB, 0x72, 0x0A, 0x46, 0xC3, 0xAA,
	0x74, 0x65, 0x20, 0x6C, 0x27, 0x68, 0x61, 0xC3, 0xAF, 0x20, 0x76, 0x6F,
	0x6C, 0x61, 0x70, 0xC3, 0xBC, 0x6B, 0x2C, 0x0A, 0xC3, 0x82, 0x6E, 0x65,
	0x20, 0x65, 0x78, 0x20, 0x61, 0xC3, 0xA9, 0x71, 0x75, 0x6F, 0x20, 0x61,
	0x75, 0x20, 0x77, 0x68, 0x69, 0x73, 0x74, 0x2C, 0x0A, 0xC3, 0x94, 0x74,
	0x65, 0x7A, 0x20, 0x63, 0x65, 0x20, 0x76, 0xC5, 0x93, 0x75, 0x20, 0x64,
	0xC3, 0xA9, 0xC3, 0xA7, 0x75, 0x2E, 0x0A, 0x4C, 0x65, 0x20, 0x63, 0xC5,
	0x93, 0x75, 0x72, 0x20, 0x64, 0xC3, 0xA9, 0xC3, 0xA7, 0x75, 0x20, 0x6D,
	0x61, 0x69, 0x73, 0x20, 0x6C, 0x27, 0xC3, 0xA2, 0x6D, 0x65, 0x20, 0x70,
	0x6C, 0x75, 0x74, 0xC3, 0xB4, 0x74, 0x20, 0x6E, 0x61, 0xC3, 0xAF, 0x76,
	0x65, 0x2C, 0x20, 0x4C, 0x6F, 0x75, 0xC3, 0xBF, 0x73, 0x20, 0x72, 0xC3,
	0xAA, 0x76, 0x61, 0x20, 0x64, 0x65, 0x20, 0x63, 0x72, 0x61, 0x70, 0x61,
	0xC3, 0xBC, 0x74, 0x65, 0x72, 0x20, 0x65, 0x6E, 0x0A, 0x63, 0x61, 0x6E,
	0x6F, 0xC3, 0xAB, 0x20, 0x61, 0x75, 0x20, 0x64, 0x65, 0x6C, 0xC3, 0xA0,
	0x20, 0x64, 0x65, 0x73, 0x20, 0xC3, 0xAE, 0x6C, 0x65, 0x73, 0x2C, 0x20,
	0x70, 0x72, 0xC3, 0xA8, 0x73, 0x20, 0x64, 0x75, 0x20, 0x6D, 0xC3, 0xA4,
	0x6C, 0x73, 0x74, 0x72, 0xC3, 0xB6, 0x6D, 0x20, 0x6F, 0xC3, 0xB9, 0x20,
	0x62, 0x72, 0xC3, 0xBB, 0x6C, 0x65, 0x6E, 0x74, 0x20, 0x6C, 0x65, 0x73,
	0x20, 0x6E, 0x6F, 0x76, 0xC3, 0xA6, 0x2E, 0x0A, 0x44, 0x27, 0x66, 0x68,
	0x75, 0x61, 0x73, 0x63, 0x61, 0x69, 0x6C, 0x20, 0xC3, 0x8D, 0x6F, 0x73,
	0x61, 0x2C, 0x20, 0xC3, 0x9A, 0x72, 0x6D, 0x68, 0x61, 0x63, 0x20, 0x6E,
	0x61, 0x20, 0x68, 0xC3, 0x93, 0x69, 0x67, 0x68, 0x65, 0x20, 0x42, 0x65,
	0x61, 0x6E, 0x6E, 0x61, 0x69, 0x74, 0x68, 0x65, 0x2C, 0x20, 0x70, 0xC3,
	0xB3, 0x72, 0x20, 0xC3, 0x89, 0x61, 0x76, 0x61, 0x20, 0x61, 0x67, 0x75,
	0x73, 0x20, 0xC3, 0x81, 0x64, 0x68, 0x61, 0x69, 0x6D, 0x68, 0x0A, 0xC3,
	0x81, 0x72, 0x76, 0xC3, 0xAD, 0x7A, 0x74, 0xC5, 0xB1, 0x72, 0xC5, 0x91,
	0x20, 0x74, 0xC3, 0xBC, 0x6B, 0xC3, 0xB6, 0x72, 0x66, 0xC3, 0xBA, 0x72,
	0xC3, 0xB3, 0x67, 0xC3, 0xA9, 0x70, 0x0A, 0x4B, 0xC3, 0xA6, 0x6D, 0x69,
	0x20, 0x6E, 0xC3, 0xBD, 0x20, 0xC3, 0xB6, 0x78, 0x69, 0x20, 0x68, 0xC3,
	0xA9, 0x72, 0x20, 0x79, 0x6B, 0x69, 0x73, 0x74, 0x20, 0xC3, 0xBE, 0x6A,
	0xC3, 0xB3, 0x66, 0x75, 0x6D, 0x20, 0x6E, 0xC3, 0xBA, 0x20, 0x62, 0xC3,
	0xA6, 0xC3, 0xB0, 0x69, 0x20, 0x76, 0xC3, 0xAD, 0x6C, 0x20, 0x6F, 0x67,
	0x20, 0xC3, 0xA1, 0x64, 0x72, 0x65, 0x70, 0x61, 0x0A, 0x53, 0xC3, 0xA6,
	0x76, 0xC3, 0xB6, 0x72, 0x20, 0x67, 0x72, 0xC3, 0xA9, 0x74, 0x20, 0xC3,
	0xA1, 0xC3, 0xB0, 0x61, 0x6E, 0x20, 0xC3, 0xBE, 0x76, 0xC3, 0xAD, 0x20,
	0xC3, 0xBA, 0x6C, 0x70, 0x61, 0x6E, 0x20, 0x76, 0x61, 0x72, 0x20, 0xC3,
	0xB3, 0x6E, 0xC3, 0xBD, 0x74, 0x0A, 0xE3, 0x81, 0x84, 0xE3, 0x82, 0x8D,
	0xE3, 0x81, 0xAF, 0xE3, 0x81, 0xAB, 0xE3, 0x81, 0xBB, 0xE3, 0x81, 0xB8,
	0xE3, 0x81, 0xA8, 0xE3, 0x81, 0xA1, 0xE3, 0x82, 0x8A, 0xE3, 0x81, 0xAC,
	0xE3, 0x82, 0x8B, 0xE3, 0x82, 0x92, 0x0A, 0xE3, 0x82, 0x8F, 0xE3, 0x81,
	0x8B, 0xE3, 0x82, 0x88, 0xE3, 0x81, 0x9F, 0xE3, 0x82, 0x8C, 0xE3, 0x81,
	0x9D, 0xE3, 0x81, 0xA4, 0xE3, 0x81, 0xAD, 0xE3, 0x81, 0xAA, 0xE3, 0x82,
	0x89, 0xE3, 0x82, 0x80, 0x0A, 0xE3, 0x81, 0x86, 0xE3, 0x82, 0x90, 0xE3,
	0x81, 0xAE, 0xE3, 0x81, 0x8A, 0xE3, 0x81, 0x8F, 0xE3, 0x82, 0x84, 0xE3,
	0x81, 0xBE, 0xE3, 0x81, 0x91, 0xE3, 0x81, 0xB5, 0xE3, 0x81, 0x93, 0xE3,
	0x81, 0x88, 0xE3, 0x81, 0xA6, 0x0A, 0xE3, 0x81, 0x82, 0xE3, 0x81, 0x95,
	0xE3, 0x81, 0x8D, 0xE3, 0x82, 0x86, 0xE3, 0x82, 0x81, 0xE3, 0x81, 0xBF,
	0xE3, 0x81, 0x97, 0xE3, 0x82, 0x91, 0xE3, 0x81, 0xB2, 0xE3, 0x82, 0x82,
	0xE3, 0x81, 0x9B, 0xE3, 0x81, 0x99, 0x0A, 0xE3, 0x82, 0xA4, 0xE3, 0x83,
	0xAD, 0xE3, 0x83, 0x8F, 0xE3, 0x83, 0x8B, 0xE3, 0x83, 0x9B, 0xE3, 0x83,
	0x98, 0xE3, 0x83, 0x88, 0x20, 0xE3, 0x83, 0x81, 0xE3, 0x83, 0xAA, 0xE3,
	0x83, 0x8C, 0xE3, 0x83, 0xAB, 0xE3, 0x83, 0xB2, 0x20, 0xE3, 0x83, 0xAF,
	0xE3, 0x82, 0xAB, 0xE3, 0x83, 0xA8, 0xE3, 0x82, 0xBF, 0xE3, 0x83, 0xAC,
	0xE3, 0x82, 0xBD, 0x20, 0xE3, 0x83, 0x84, 0xE3, 0x83, 0x8D, 0xE3, 0x83,
	0x8A, 0xE3, 0x83, 0xA9, 0xE3, 0x83, 0xA0, 0x0A, 0xE3, 0x82, 0xA6, 0xE3,
	0x83, 0xB0, 0xE3, 0x83, 0x8E, 0xE3, 0x82, 0xAA, 0xE3, 0x82, 0xAF, 0xE3,
	0x83, 0xA4, 0xE3, 0x83, 0x9E, 0x20, 0xE3, 0x82, 0xB1, 0xE3, 0x83, 0x95,
	0xE3, 0x82, 0xB3, 0xE3, 0x82, 0xA8, 0xE3, 0x83, 0x86, 0x20, 0xE3, 0x82,
	0xA2, 0xE3, 0x82, 0xB5, 0xE3, 0x82, 0xAD, 0xE3, 0x83, 0xA6, 0xE3, 0x83,
	0xA1, 0xE3, 0x83, 0x9F, 0xE3, 0x82, 0xB7, 0x20, 0xE3, 0x83, 0xB1, 0xE3,
	0x83, 0x92, 0xE3, 0x83, 0xA2, 0xE3, 0x82, 0xBB, 0xE3, 0x82, 0xB9, 0xE3,
	0x83, 0xB3, 0x0A, 0x20, 0x20, 0x3F, 0x20, 0xD7, 0x93, 0xD7, 0x92, 0x20,
	0xD7, 0xA1, 0xD7, 0xA7, 0xD7, 0xA8, 0xD7, 0x9F, 0x20, 0xD7, 0xA9, 0xD7,
	0x98, 0x20, 0xD7, 0x91, 0xD7, 0x99, 0xD7, 0x9D, 0x20, 0xD7, 0x9E, 0xD7,
	0x90, 0xD7, 0x95, 0xD7, 0x9B, 0xD7, 0x96, 0xD7, 0x91, 0x20, 0xD7, 0x95,
	0xD7, 0x9C, 0xD7, 0xA4, 0xD7, 0xAA, 0xD7, 0xA2, 0x20, 0xD7, 0x9E, 0xD7,
	0xA6, 0xD7, 0x90, 0x20, 0xD7, 0x9C, 0xD7, 0x95, 0x20, 0xD7, 0x97, 0xD7,
	0x91, 0xD7, 0xA8, 0xD7, 0x94, 0x20, 0xD7, 0x90, 0xD7, 0x99, 0xD7, 0x9A,
	0x20, 0xD7, 0x94, 0xD7, 0xA7, 0xD7, 0x9C, 0xD7, 0x99, 0xD7, 0x98, 0xD7,
	0x94, 0x0A, 0x50, 0x63, 0x68, 0x6E, 0xC4, 0x85, 0xC4, 0x87, 0x20, 0x77,
	0x20, 0x74, 0xC4, 0x99, 0x20, 0xC5, 0x82, 0xC3, 0xB3, 0x64, 0xC5, 0xBA,
	0x20, 0x6A, 0x65, 0xC5, 0xBC, 0x61, 0x20, 0x6C, 0x75, 0x62, 0x20, 0x6F,
	0xC5, 0x9B, 0x6D, 0x20, 0x73, 0x6B, 0x72, 0x7A, 0x79, 0xC5, 0x84, 0x20,
	0x66, 0x69, 0x67, 0x0A, 0xD0, 0x92, 0x20, 0xD1, 0x87, 0xD0, 0xB0, 0xD1,
	0x89, 0xD0, 0xB0, 0xD1, 0x85, 0x20, 0xD1, 0x8E, 0xD0, 0xB3, 0xD0, 0xB0,
	0x20, 0xD0, 0xB6, 0xD0, 0xB8, 0xD0, 0xBB, 0x20, 0xD0, 0xB1, 0xD1, 0x8B,
	0x20, 0xD1, 0x86, 0xD0, 0xB8, 0xD1, 0x82, 0xD1, 0x80, 0xD1, 0x83, 0xD1,
	0x81, 0x3F, 0x20, 0xD0, 0x94, 0xD0, 0xB0, 0x2C, 0x20, 0xD0, 0xBD, 0xD0,
	0xBE, 0x20, 0xD1, 0x84, 0xD0, 0xB0, 0xD0, 0xBB, 0xD1, 0x8C, 0xD1, 0x88,
	0xD0, 0xB8, 0xD0, 0xB2, 0xD1, 0x8B, 0xD0, 0xB9, 0x20, 0xD1, 0x8D, 0xD0,
	0xBA, 0xD0, 0xB7, 0xD0, 0xB5, 0xD0, 0xBC, 0xD0, 0xBF, 0xD0, 0xBB, 0xD1,
	0x8F, 0xD1, 0x80, 0x21, 0x0A, 0xD0, 0xA1, 0xD1, 0x8A, 0xD0, 0xB5, 0xD1,
	0x88, 0xD1, 0x8C, 0x20, 0xD0, 0xB6, 0xD0, 0xB5, 0x20, 0xD0, 0xB5, 0xD1,
	0x89, 0xD1, 0x91, 0x20, 0xD1, 0x8D, 0xD1, 0x82, 0xD0, 0xB8, 0xD1, 0x85,
	0x20, 0xD0, 0xBC, 0xD1, 0x8F, 0xD0, 0xB3, 0xD0, 0xBA, 0xD0, 0xB8, 0xD1,
	0x85, 0x20, 0xD1, 0x84, 0xD1, 0x80, 0xD0, 0xB0, 0xD0, 0xBD, 0xD1, 0x86,
	0xD1, 0x83, 0xD0, 0xB7, 0xD1, 0x81, 0xD0, 0xBA, 0xD0, 0xB8, 0xD1, 0x85,
	0x20, 0xD0, 0xB1, 0xD1, 0x83, 0xD0, 0xBB, 0xD0, 0xBE, 0xD0, 0xBA, 0x20,
	0xD0, 0xB4, 0xD0, 0xB0, 0x20, 0xD0, 0xB2, 0xD1, 0x8B, 0xD0, 0xBF, 0xD0,
	0xB5, 0xD0, 0xB9, 0x20, 0xD1, 0x87, 0xD0, 0xB0, 0xD1, 0x8E, 0x0A, 0xE0,
	0xB9, 0x8F, 0x20, 0xE0, 0xB9, 0x80, 0xE0, 0xB8, 0x9B, 0xE0, 0xB9, 0x87,
	0xE0, 0xB8, 0x99, 0xE0, 0xB8, 0xA1, 0xE0, 0xB8, 0x99, 0xE0, 0xB8, 0xB8,
	0xE0, 0xB8, 0xA9, 0xE0, 0xB8, 0xA2, 0xE0, 0xB9, 0x8C, 0xE0, 0xB8, 0xAA,
	0xE0, 0xB8, 0xB8, 0xE0, 0xB8, 0x94, 0xE0, 0xB8, 0x9B, 0xE0, 0xB8, 0xA3,
	0xE0, 0xB8, 0xB0, 0xE0, 0xB9, 0x80, 0xE0, 0xB8, 0xAA, 0xE0, 0xB8, 0xA3,
	0xE0, 0xB8, 0xB4, 0xE0, 0xB8, 0x90, 0xE0, 0xB9, 0x80, 0xE0, 0xB8, 0xA5,
	0xE0, 0xB8, 0xB4, 0xE0, 0xB8, 0xA8, 0xE0, 0xB8, 0x84, 0xE0, 0xB8, 0xB8,
	0xE0, 0xB8, 0x93, 0xE0, 0xB8, 0x84, 0xE0, 0xB9, 0x88, 0xE0, 0xB8, 0xB2,
	0x20, 0x20, 0xE0, 0xB8, 0x81, 0xE0, 0xB8, 0xA7, 0xE0, 0xB9, 0x88, 0xE0,
	0xB8, 0xB2, 0xE0, 0xB8, 0x9A, 0xE0, 0xB8, 0xA3, 0xE0, 0xB8, 0xA3, 0xE0,
	0xB8, 0x94, 0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0x9D, 0xE0, 0xB8, 0xB9, 0xE0,
	0xB8, 0x87, 0xE0, 0xB8, 0xAA, 0xE0, 0xB8, 0xB1, 0xE0, 0xB8, 0x95, 0xE0,
	0xB8, 0xA7, 0xE0, 0xB9, 0x8C, 0xE0, 0xB9, 0x80, 0xE0, 0xB8, 0x94, 0xE0,
	0xB8, 0xA3, 0xE0, 0xB8, 0xB1, 0xE0, 0xB8, 0x88, 0xE0, 0xB8, 0x89, 0xE0,
	0xB8, 0xB2, 0xE0, 0xB8, 0x99, 0x0A, 0xE0, 0xB8, 0x88, 0xE0, 0xB8, 0x87,
	0xE0, 0xB8, 0x9D, 0xE0, 0xB9, 0x88, 0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0x9F,
	0xE0, 0xB8, 0xB1, 0xE0, 0xB8, 0x99, 0xE0, 0xB8, 0x9E, 0xE0, 0xB8, 0xB1,
	0xE0, 0xB8, 0x92, 0xE0, 0xB8, 0x99, 0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0xA7,
	0xE0, 0xB8, 0xB4, 0xE0, 0xB8, 0x8A, 0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0x81,
	0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0xA3, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0xE0, 0xB8, 0xAD, 0xE0, 0xB8, 0xA2, 0xE0,
	0xB9, 0x88, 0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0xA5, 0xE0, 0xB9, 0x89, 0xE0,
	0xB8, 0xB2, 0xE0, 0xB8, 0x87, 0xE0, 0xB8, 0x9C, 0xE0, 0xB8, 0xA5, 0xE0,
	0xB8, 0xB2, 0xE0, 0xB8, 0x8D, 0xE0, 0xB8, 0xA4, 0xE0, 0xB9, 0x85, 0xE0,
	0xB9, 0x80, 0xE0, 0xB8, 0x82, 0xE0, 0xB9, 0x88, 0xE0, 0xB8, 0x99, 0xE0,
	0xB8, 0x86, 0xE0, 0xB9, 0x88, 0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0x9A, 0xE0,
	0xB8, 0xB5, 0xE0, 0xB8, 0x91, 0xE0, 0xB8, 0xB2, 0xE0, 0xB9, 0x83, 0xE0,
	0xB8, 0x84, 0xE0, 0xB8, 0xA3, 0x0A, 0xE0, 0xB9, 0x84, 0xE0, 0xB8, 0xA1,
	0xE0, 0xB9, 0x88, 0xE0, 0xB8, 0x96, 0xE0, 0xB8, 0xB7, 0xE0, 0xB8, 0xAD,
	0xE0, 0xB9, 0x82, 0xE0, 0xB8, 0x97, 0xE0, 0xB8, 0xA9, 0xE0, 0xB9, 0x82,
	0xE0, 0xB8, 0x81, 0xE0, 0xB8, 0xA3, 0xE0, 0xB8, 0x98, 0xE0, 0xB9, 0x81,
	0xE0, 0xB8, 0x8A, 0xE0, 0xB9, 0x88, 0xE0, 0xB8, 0x87, 0xE0, 0xB8, 0x8B,
	0xE0, 0xB8, 0xB1, 0xE0, 0xB8, 0x94, 0xE0, 0xB8, 0xAE, 0xE0, 0xB8, 0xB6,
	0xE0, 0xB8, 0x94, 0xE0, 0xB8, 0xAE, 0xE0, 0xB8, 0xB1, 0xE0, 0xB8, 0x94,
	0xE0, 0xB8, 0x94, 0xE0, 0xB9, 0x88, 0xE0, 0xB8, 0xB2, 0x20, 0x20, 0x20,
	0x20, 0x20, 0xE0, 0xB8, 0xAB, 0xE0, 0xB8, 0xB1, 0xE0, 0xB8, 0x94, 0xE0,
	0xB8, 0xAD, 0xE0, 0xB8, 0xA0, 0xE0, 0xB8, 0xB1, 0xE0, 0xB8, 0xA2, 0xE0,
	0xB9, 0x80, 0xE0, 0xB8, 0xAB, 0xE0, 0xB8, 0xA1, 0xE0, 0xB8, 0xB7, 0xE0,
	0xB8, 0xAD, 0xE0, 0xB8, 0x99, 0xE0, 0xB8, 0x81, 0xE0, 0xB8, 0xB5, 0xE0,
	0xB8, 0xAC, 0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0xAD, 0xE0, 0xB8, 0xB1, 0xE0,
	0xB8, 0x8A, 0xE0, 0xB8, 0x8C, 0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0xAA, 0xE0,
	0xB8, 0xB1, 0xE0, 0xB8, 0xA2, 0x0A, 0xE0, 0xB8, 0x9B, 0xE0, 0xB8, 0x8F,
	0xE0, 0xB8, 0xB4, 0xE0, 0xB8, 0x9A, 0xE0, 0xB8, 0xB1, 0xE0, 0xB8, 0x95,
	0xE0, 0xB8, 0xB4, 0xE0, 0xB8, 0x9B, 0xE0, 0xB8, 0xA3, 0xE0, 0xB8, 0xB0,
	0xE0, 0xB8, 0x9E, 0xE0, 0xB8, 0xA4, 0xE0, 0xB8, 0x95, 0xE0, 0xB8, 0xB4,
	0xE0, 0xB8, 0x81, 0xE0, 0xB8, 0x8E, 0xE0, 0xB8, 0x81, 0xE0, 0xB8, 0xB3,
	0xE0, 0xB8, 0xAB, 0xE0, 0xB8, 0x99, 0xE0, 0xB8, 0x94, 0xE0, 0xB9, 0x83,
	0xE0, 0xB8, 0x88, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xE0,
	0xB8, 0x9E, 0xE0, 0xB8, 0xB9, 0xE0, 0xB8, 0x94, 0xE0, 0xB8, 0x88, 0xE0,
	0xB8, 0xB2, 0xE0, 0xB9, 0x83, 0xE0, 0xB8, 0xAB, 0xE0, 0xB9, 0x89, 0xE0,
	0xB8, 0x88, 0xE0, 0xB9, 0x8A, 0xE0, 0xB8, 0xB0, 0xE0, 0xB9, 0x86, 0x20,
	0xE0, 0xB8, 0x88, 0xE0, 0xB9, 0x8B, 0xE0, 0xB8, 0xB2, 0xE0, 0xB9, 0x86,
	0x20, 0xE0, 0xB8, 0x99, 0xE0, 0xB9, 0x88, 0xE0, 0xB8, 0xB2, 0xE0, 0xB8,
	0x9F, 0xE0, 0xB8, 0xB1, 0xE0, 0xB8, 0x87, 0xE0, 0xB9, 0x80, 0xE0, 0xB8,
	0xAD, 0xE0, 0xB8, 0xA2, 0x20, 0xE0, 0xB8, 0xAF, 0x0A, 0x50, 0x69, 0x6A,
	0x61, 0x6D, 0x61, 0x6C, 0xC4, 0xB1, 0x20, 0x68, 0x61, 0x73, 0x74, 0x61,
	0x2C, 0x20, 0x79, 0x61, 0xC4, 0x9F, 0xC4, 0xB1, 0x7A, 0x20, 0xC5, 0x9F,
	0x6F, 0x66, 0xC3, 0xB6, 0x72, 0x65, 0x20, 0xC3, 0xA7, 0x61, 0x62, 0x75,
	0x63, 0x61, 0x6B, 0x20, 0x67, 0xC3, 0xBC, 0x76, 0x65, 0x6E, 0x64, 0x69,
	0x2E, 0x00
}; // 2305 bytes + \0, 1391 code points, 1391 chars

static
const char decomposedUTF8TestString3[ ] = {
	0x51, 0x75, 0x69, 0x7A, 0x64, 0x65, 0x6C, 0x74, 0x61, 0x67, 0x65, 0x72,
	0x6E, 0x65, 0x20, 0x73, 0x70, 0x69, 0x73, 0x74, 0x65, 0x20, 0x6A, 0x6F,
	0x72, 0x64, 0x62, 0xC3, 0xA6, 0x72, 0x20, 0x6D, 0x65, 0x64, 0x20, 0x66,
	0x6C, 0xC3, 0xB8, 0x64, 0x65, 0x2C, 0x20, 0x6D, 0x65, 0x6E, 0x73, 0x20,
	0x63, 0x69, 0x72, 0x6B, 0x75, 0x73, 0x6B, 0x6C, 0x6F, 0x76, 0x6E, 0x65,
	0x6E, 0x0A, 0x57, 0x6F, 0x6C, 0x74, 0x68, 0x65, 0x72, 0x20, 0x73, 0x70,
	0x69, 0x6C, 0x6C, 0x65, 0x64, 0x65, 0x20, 0x70, 0x61, 0xCC, 0x8A, 0x20,
	0x78, 0x79, 0x6C, 0x6F, 0x66, 0x6F, 0x6E, 0x2E, 0x0A, 0x46, 0x61, 0x6C,
	0x73, 0x63, 0x68, 0x65, 0x73, 0x20, 0x55, 0xCC, 0x88, 0x62, 0x65, 0x6E,
	0x20, 0x76, 0x6F, 0x6E, 0x20, 0x58, 0x79, 0x6C, 0x6F, 0x70, 0x68, 0x6F,
	0x6E, 0x6D, 0x75, 0x73, 0x69, 0x6B, 0x20, 0x71, 0x75, 0x61, 0xCC, 0x88,
	0x6C, 0x74, 0x20, 0x6A, 0x65, 0x64, 0x65, 0x6E, 0x20, 0x67, 0x72, 0x6F,
	0xCC, 0x88, 0xC3, 0x9F, 0x65, 0x72, 0x65, 0x6E, 0x20, 0x5A, 0x77, 0x65,
	0x72, 0x67, 0x0A, 0x5A, 0x77, 0x6F, 0xCC, 0x88, 0x6C, 0x66, 0x20, 0x42,
	0x6F, 0x78, 0x6B, 0x61, 0xCC, 0x88, 0x6D, 0x70, 0x66, 0x65, 0x72, 0x20,
	0x6A, 0x61, 0x67, 0x74, 0x65, 0x6E, 0x20, 0x45, 0x76, 0x61, 0x20, 0x71,
	0x75, 0x65, 0x72, 0x20, 0x75, 0xCC, 0x88, 0x62, 0x65, 0x72, 0x20, 0x64,
	0x65, 0x6E, 0x20, 0x53, 0x79, 0x6C, 0x74, 0x65, 0x72, 0x20, 0x44, 0x65,
	0x69, 0x63, 0x68, 0x0A, 0xCE, 0x93, 0xCE, 0xB1, 0xCE, 0xB6, 0xCE, 0xB5,
	0xCC, 0x81, 0xCE, 0xB5, 0xCF, 0x82, 0x20, 0xCE, 0xBA, 0xCE, 0xB1, 0xCE,
	0xB9, 0xCC, 0x80, 0x20, 0xCE, 0xBC, 0xCF, 0x85, 0xCF, 0x81, 0xCF, 0x84,
	0xCE, 0xB9, 0xCE, 0xB5, 0xCC, 0x80, 0xCF, 0x82, 0x20, 0xCE, 0xB4, 0xCE,
	0xB5, 0xCC, 0x80, 0xCE, 0xBD, 0x20, 0xCE, 0xB8, 0xCE, 0xB1, 0xCC, 0x80,
	0x20, 0xCE, 0xB2, 0xCF, 0x81, 0xCF, 0x89, 0xCD, 0x82, 0x20, 0xCF, 0x80,
	0xCE, 0xB9, 0xCE, 0xB1, 0xCC, 0x80, 0x20, 0xCF, 0x83, 0xCF, 0x84, 0xCE,
	0xBF, 0xCC, 0x80, 0x20, 0xCF, 0x87, 0xCF, 0x81, 0xCF, 0x85, 0xCF, 0x83,
	0xCE, 0xB1, 0xCF, 0x86, 0xCE, 0xB9, 0xCC, 0x80, 0x20, 0xCE, 0xBE, 0xCE,
	0xB5, 0xCC, 0x81, 0xCF, 0x86, 0xCF, 0x89, 0xCF, 0x84, 0xCE, 0xBF, 0x0A,
	0xCE, 0x9E, 0xCE, 0xB5, 0xCF, 0x83, 0xCE, 0xBA, 0xCE, 0xB5, 0xCF, 0x80,
	0xCE, 0xB1, 0xCC, 0x81, 0xCE, 0xB6, 0xCF, 0x89, 0x20, 0xCF, 0x84, 0xCE,
	0xB7, 0xCC, 0x80, 0xCE, 0xBD, 0x20, 0xCF, 0x88, 0xCF, 0x85, 0xCF, 0x87,
	0xCE, 0xBF, 0xCF, 0x86, 0xCE, 0xB8, 0xCE, 0xBF, 0xCC, 0x81, 0xCF, 0x81,
	0xCE, 0xB1, 0x20, 0xCE, 0xB2, 0xCE, 0xB4, 0xCE, 0xB5, 0xCE, 0xBB, 0xCF,
	0x85, 0xCE, 0xB3, 0xCE, 0xBC, 0xCE, 0xB9, 0xCC, 0x81, 0xCE, 0xB1, 0x0A,
	0x45, 0x6C, 0x20, 0x70, 0x69, 0x6E, 0x67, 0x75, 0xCC, 0x88, 0x69, 0x6E,
	0x6F, 0x20, 0x57, 0x65, 0x6E, 0x63, 0x65, 0x73, 0x6C, 0x61, 0x6F, 0x20,
	0x68, 0x69, 0x7A, 0x6F, 0x20, 0x6B, 0x69, 0x6C, 0x6F, 0xCC, 0x81, 0x6D,
	0x65, 0x74, 0x72, 0x6F, 0x73, 0x20, 0x62, 0x61, 0x6A, 0x6F, 0x20, 0x65,
	0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x69, 0x76, 0x61, 0x20, 0x6C, 0x6C,
	0x75, 0x76, 0x69, 0x61, 0x20, 0x79, 0x20, 0x0A, 0x66, 0x72, 0x69, 0xCC,
	0x81, 0x6F, 0x2C, 0x20, 0x61, 0x6E, 0xCC, 0x83, 0x6F, 0x72, 0x61, 0x62,
	0x61, 0x20, 0x61, 0x20, 0x73, 0x75, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69,
	0x64, 0x6F, 0x20, 0x63, 0x61, 0x63, 0x68, 0x6F, 0x72, 0x72, 0x6F, 0x2E,
	0x0A, 0x6C, 0x27, 0x69, 0xCC, 0x82, 0x6C, 0x65, 0x20, 0x65, 0x78, 0x69,
	0x67, 0x75, 0x65, 0xCC, 0x88, 0x0A, 0x4F, 0x75, 0xCC, 0x80, 0x20, 0x6C,
	0x27, 0x6F, 0x62, 0x65, 0xCC, 0x80, 0x73, 0x65, 0x20, 0x6A, 0x75, 0x72,
	0x79, 0x20, 0x6D, 0x75, 0xCC, 0x82, 0x72, 0x0A, 0x46, 0x65, 0xCC, 0x82,
	0x74, 0x65, 0x20, 0x6C, 0x27, 0x68, 0x61, 0x69, 0xCC, 0x88, 0x20, 0x76,
	0x6F, 0x6C, 0x61, 0x70, 0x75, 0xCC, 0x88, 0x6B, 0x2C, 0x0A, 0x41, 0xCC,
	0x82, 0x6E, 0x65, 0x20, 0x65, 0x78, 0x20, 0x61, 0x65, 0xCC, 0x81, 0x71,
	0x75, 0x6F, 0x20, 0x61, 0x75, 0x20, 0x77, 0x68, 0x69, 0x73, 0x74, 0x2C,
	0x0A, 0x4F, 0xCC, 0x82, 0x74, 0x65, 0x7A, 0x20, 0x63, 0x65, 0x20, 0x76,
	0xC5, 0x93, 0x75, 0x20, 0x64, 0x65, 0xCC, 0x81, 0x63, 0xCC, 0xA7, 0x75,
	0x2E, 0x0A, 0x4C, 0x65, 0x20, 0x63, 0xC5, 0x93, 0x75, 0x72, 0x20, 0x64,
	0x65, 0xCC, 0x81, 0x63, 0xCC, 0xA7, 0x75, 0x20, 0x6D, 0x61, 0x69, 0x73,
	0x20, 0x6C, 0x27, 0x61, 0xCC, 0x82, 0x6D, 0x65, 0x20, 0x70, 0x6C, 0x75,
	0x74, 0x6F, 0xCC, 0x82, 0x74, 0x20, 0x6E, 0x61, 0x69, 0xCC, 0x88, 0x76,
	0x65, 0x2C, 0x20, 0x4C, 0x6F, 0x75, 0x79, 0xCC, 0x88, 0x73, 0x20, 0x72,
	0x65, 0xCC, 0x82, 0x76, 0x61, 0x20, 0x64, 0x65, 0x20, 0x63, 0x72, 0x61,
	0x70, 0x61, 0x75, 0xCC, 0x88, 0x74, 0x65, 0x72, 0x20, 0x65, 0x6E, 0x0A,
	0x63, 0x61, 0x6E, 0x6F, 0x65, 0xCC, 0x88, 0x20, 0x61, 0x75, 0x20, 0x64,
	0x65, 0x6C, 0x61, 0xCC, 0x80, 0x20, 0x64, 0x65, 0x73, 0x20, 0x69, 0xCC,
	0x82, 0x6C, 0x65, 0x73, 0x2C, 0x20, 0x70, 0x72, 0x65, 0xCC, 0x80, 0x73,
	0x20, 0x64, 0x75, 0x20, 0x6D, 0x61, 0xCC, 0x88, 0x6C, 0x73, 0x74, 0x72,
	0x6F, 0xCC, 0x88, 0x6D, 0x20, 0x6F, 0x75, 0xCC, 0x80, 0x20, 0x62, 0x72,
	0x75, 0xCC, 0x82, 0x6C, 0x65, 0x6E, 0x74, 0x20, 0x6C, 0x65, 0x73, 0x20,
	0x6E, 0x6F, 0x76, 0xC3, 0xA6, 0x2E, 0x0A, 0x44, 0x27, 0x66, 0x68, 0x75,
	0x61, 0x73, 0x63, 0x61, 0x69, 0x6C, 0x20, 0x49, 0xCC, 0x81, 0x6F, 0x73,
	0x61, 0x2C, 0x20, 0x55, 0xCC, 0x81, 0x72, 0x6D, 0x68, 0x61, 0x63, 0x20,
	0x6E, 0x61, 0x20, 0x68, 0x4F, 0xCC, 0x81, 0x69, 0x67, 0x68, 0x65, 0x20,
	0x42, 0x65, 0x61, 0x6E, 0x6E, 0x61, 0x69, 0x74, 0x68, 0x65, 0x2C, 0x20,
	0x70, 0x6F, 0xCC, 0x81, 0x72, 0x20, 0x45, 0xCC, 0x81, 0x61, 0x76, 0x61,
	0x20, 0x61, 0x67, 0x75, 0x73, 0x20, 0x41, 0xCC, 0x81, 0x64, 0x68, 0x61,
	0x69, 0x6D, 0x68, 0x0A, 0x41, 0xCC, 0x81, 0x72, 0x76, 0x69, 0xCC, 0x81,
	0x7A, 0x74, 0x75, 0xCC, 0x8B, 0x72, 0x6F, 0xCC, 0x8B, 0x20, 0x74, 0x75,
	0xCC, 0x88, 0x6B, 0x6F, 0xCC, 0x88, 0x72, 0x66, 0x75, 0xCC, 0x81, 0x72,
	0x6F, 0xCC, 0x81, 0x67, 0x65, 0xCC, 0x81, 0x70, 0x0A, 0x4B, 0xC3, 0xA6,
	0x6D, 0x69, 0x20, 0x6E, 0x79, 0xCC, 0x81, 0x20, 0x6F, 0xCC, 0x88, 0x78,
	0x69, 0x20, 0x68, 0x65, 0xCC, 0x81, 0x72, 0x20, 0x79, 0x6B, 0x69, 0x73,
	0x74, 0x20, 0xC3, 0xBE, 0x6A, 0x6F, 0xCC, 0x81, 0x66, 0x75, 0x6D, 0x20,
	0x6E, 0x75, 0xCC, 0x81, 0x20, 0x62, 0xC3, 0xA6, 0xC3, 0xB0, 0x69, 0x20,
	0x76, 0x69, 0xCC, 0x81, 0x6C, 0x20, 0x6F, 0x67, 0x20, 0x61, 0xCC, 0x81,
	0x64, 0x72, 0x65, 0x70, 0x61, 0x0A, 0x53, 0xC3, 0xA6, 0x76, 0x6F, 0xCC,
	0x88, 0x72, 0x20, 0x67, 0x72, 0x65, 0xCC, 0x81, 0x74, 0x20, 0x61, 0xCC,
	0x81, 0xC3, 0xB0, 0x61, 0x6E, 0x20, 0xC3, 0xBE, 0x76, 0x69, 0xCC, 0x81,
	0x20, 0x75, 0xCC, 0x81, 0x6C, 0x70, 0x61, 0x6E, 0x20, 0x76, 0x61, 0x72,
	0x20, 0x6F, 0xCC, 0x81, 0x6E, 0x79, 0xCC, 0x81, 0x74, 0x0A, 0xE3, 0x81,
	0x84, 0xE3, 0x82, 0x8D, 0xE3, 0x81, 0xAF, 0xE3, 0x81, 0xAB, 0xE3, 0x81,
	0xBB, 0xE3, 0x81, 0xB8, 0xE3, 0x81, 0xA8, 0xE3, 0x81, 0xA1, 0xE3, 0x82,
	0x8A, 0xE3, 0x81, 0xAC, 0xE3, 0x82, 0x8B, 0xE3, 0x82, 0x92, 0x0A, 0xE3,
	0x82, 0x8F, 0xE3, 0x81, 0x8B, 0xE3, 0x82, 0x88, 0xE3, 0x81, 0x9F, 0xE3,
	0x82, 0x8C, 0xE3, 0x81, 0x9D, 0xE3, 0x81, 0xA4, 0xE3, 0x81, 0xAD, 0xE3,
	0x81, 0xAA, 0xE3, 0x82, 0x89, 0xE3, 0x82, 0x80, 0x0A, 0xE3, 0x81, 0x86,
	0xE3, 0x82, 0x90, 0xE3, 0x81, 0xAE, 0xE3, 0x81, 0x8A, 0xE3, 0x81, 0x8F,
	0xE3, 0x82, 0x84, 0xE3, 0x81, 0xBE, 0xE3, 0x81, 0x91, 0xE3, 0x81, 0xB5,
	0xE3, 0x81, 0x93, 0xE3, 0x81, 0x88, 0xE3, 0x81, 0xA6, 0x0A, 0xE3, 0x81,
	0x82, 0xE3, 0x81, 0x95, 0xE3, 0x81, 0x8D, 0xE3, 0x82, 0x86, 0xE3, 0x82,
	0x81, 0xE3, 0x81, 0xBF, 0xE3, 0x81, 0x97, 0xE3, 0x82, 0x91, 0xE3, 0x81,
	0xB2, 0xE3, 0x82, 0x82, 0xE3, 0x81, 0x9B, 0xE3, 0x81, 0x99, 0x0A, 0xE3,
	0x82, 0xA4, 0xE3, 0x83, 0xAD, 0xE3, 0x83, 0x8F, 0xE3, 0x83, 0x8B, 0xE3,
	0x83, 0x9B, 0xE3, 0x83, 0x98, 0xE3, 0x83, 0x88, 0x20, 0xE3, 0x83, 0x81,
	0xE3, 0x83, 0xAA, 0xE3, 0x83, 0x8C, 0xE3, 0x83, 0xAB, 0xE3, 0x83, 0xB2,
	0x20, 0xE3, 0x83, 0xAF, 0xE3, 0x82, 0xAB, 0xE3, 0x83, 0xA8, 0xE3, 0x82,
	0xBF, 0xE3, 0x83, 0xAC, 0xE3, 0x82, 0xBD, 0x20, 0xE3, 0x83, 0x84, 0xE3,
	0x83, 0x8D, 0xE3, 0x83, 0x8A, 0xE3, 0x83, 0xA9, 0xE3, 0x83, 0xA0, 0x0A,
	0xE3, 0x82, 0xA6, 0xE3, 0x83, 0xB0, 0xE3, 0x83, 0x8E, 0xE3, 0x82, 0xAA,
	0xE3, 0x82, 0xAF, 0xE3, 0x83, 0xA4, 0xE3, 0x83, 0x9E, 0x20, 0xE3, 0x82,
	0xB1, 0xE3, 0x83, 0x95, 0xE3, 0x82, 0xB3, 0xE3, 0x82, 0xA8, 0xE3, 0x83,
	0x86, 0x20, 0xE3, 0x82, 0xA2, 0xE3, 0x82, 0xB5, 0xE3, 0x82, 0xAD, 0xE3,
	0x83, 0xA6, 0xE3, 0x83, 0xA1, 0xE3, 0x83, 0x9F, 0xE3, 0x82, 0xB7, 0x20,
	0xE3, 0x83, 0xB1, 0xE3, 0x83, 0x92, 0xE3, 0x83, 0xA2, 0xE3, 0x82, 0xBB,
	0xE3, 0x82, 0xB9, 0xE3, 0x83, 0xB3, 0x0A, 0x20, 0x20, 0x3F, 0x20, 0xD7,
	0x93, 0xD7, 0x92, 0x20, 0xD7, 0xA1, 0xD7, 0xA7, 0xD7, 0xA8, 0xD7, 0x9F,
	0x20, 0xD7, 0xA9, 0xD7, 0x98, 0x20, 0xD7, 0x91, 0xD7, 0x99, 0xD7, 0x9D,
	0x20, 0xD7, 0x9E, 0xD7, 0x90, 0xD7, 0x95, 0xD7, 0x9B, 0xD7, 0x96, 0xD7,
	0x91, 0x20, 0xD7, 0x95, 0xD7, 0x9C, 0xD7, 0xA4, 0xD7, 0xAA, 0xD7, 0xA2,
	0x20, 0xD7, 0x9E, 0xD7, 0xA6, 0xD7, 0x90, 0x20, 0xD7, 0x9C, 0xD7, 0x95,
	0x20, 0xD7, 0x97, 0xD7, 0x91, 0xD7, 0xA8, 0xD7, 0x94, 0x20, 0xD7, 0x90,
	0xD7, 0x99, 0xD7, 0x9A, 0x20, 0xD7, 0x94, 0xD7, 0xA7, 0xD7, 0x9C, 0xD7,
	0x99, 0xD7, 0x98, 0xD7, 0x94, 0x0A, 0x50, 0x63, 0x68, 0x6E, 0x61, 0xCC,
	0xA8, 0x63, 0xCC, 0x81, 0x20, 0x77, 0x20, 0x74, 0x65, 0xCC, 0xA8, 0x20,
	0xC5, 0x82, 0x6F, 0xCC, 0x81, 0x64, 0x7A, 0xCC, 0x81, 0x20, 0x6A, 0x65,
	0x7A, 0xCC, 0x87, 0x61, 0x20, 0x6C, 0x75, 0x62, 0x20, 0x6F, 0x73, 0xCC,
	0x81, 0x6D, 0x20, 0x73, 0x6B, 0x72, 0x7A, 0x79, 0x6E, 0xCC, 0x81, 0x20,
	0x66, 0x69, 0x67, 0x0A, 0xD0, 0x92, 0x20, 0xD1, 0x87, 0xD0, 0xB0, 0xD1,
	0x89, 0xD0, 0xB0, 0xD1, 0x85, 0x20, 0xD1, 0x8E, 0xD0, 0xB3, 0xD0, 0xB0,
	0x20, 0xD0, 0xB6, 0xD0, 0xB8, 0xD0, 0xBB, 0x20, 0xD0, 0xB1, 0xD1, 0x8B,
	0x20, 0xD1, 0x86, 0xD0, 0xB8, 0xD1, 0x82, 0xD1, 0x80, 0xD1, 0x83, 0xD1,
	0x81, 0x3F, 0x20, 0xD0, 0x94, 0xD0, 0xB0, 0x2C, 0x20, 0xD0, 0xBD, 0xD0,
	0xBE, 0x20, 0xD1, 0x84, 0xD0, 0xB0, 0xD0, 0xBB, 0xD1, 0x8C, 0xD1, 0x88,
	0xD0, 0xB8, 0xD0, 0xB2, 0xD1, 0x8B, 0xD0, 0xB8, 0xCC, 0x86, 0x20, 0xD1,
	0x8D, 0xD0, 0xBA, 0xD0, 0xB7, 0xD0, 0xB5, 0xD0, 0xBC, 0xD0, 0xBF, 0xD0,
	0xBB, 0xD1, 0x8F, 0xD1, 0x80, 0x21, 0x0A, 0xD0, 0xA1, 0xD1, 0x8A, 0xD0,
	0xB5, 0xD1, 0x88, 0xD1, 0x8C, 0x20, 0xD0, 0xB6, 0xD0, 0xB5, 0x20, 0xD0,
	0xB5, 0xD1, 0x89, 0xD0, 0xB5, 0xCC, 0x88, 0x20, 0xD1, 0x8D, 0xD1, 0x82,
	0xD0, 0xB8, 0xD1, 0x85, 0x20, 0xD0, 0xBC, 0xD1, 0x8F, 0xD0, 0xB3, 0xD0,
	0xBA, 0xD0, 0xB8, 0xD1, 0x85, 0x20, 0xD1, 0x84, 0xD1, 0x80, 0xD0, 0xB0,
	0xD0, 0xBD, 0xD1, 0x86, 0xD1, 0x83, 0xD0, 0xB7, 0xD1, 0x81, 0xD0, 0xBA,
	0xD0, 0xB8, 0xD1, 0x85, 0x20, 0xD0, 0xB1, 0xD1, 0x83, 0xD0, 0xBB, 0xD0,
	0xBE, 0xD0, 0xBA, 0x20, 0xD0, 0xB4, 0xD0, 0xB0, 0x20, 0xD0, 0xB2, 0xD1,
	0x8B, 0xD0, 0xBF, 0xD0, 0xB5, 0xD0, 0xB8, 0xCC, 0x86, 0x20, 0xD1, 0x87,
	0xD0, 0xB0, 0xD1, 0x8E, 0x0A, 0xE0, 0xB9, 0x8F, 0x20, 0xE0, 0xB9, 0x80,
	0xE0, 0xB8, 0x9B, 0xE0, 0xB9, 0x87, 0xE0, 0xB8, 0x99, 0xE0, 0xB8, 0xA1,
	0xE0, 0xB8, 0x99, 0xE0, 0xB8, 0xB8, 0xE0, 0xB8, 0xA9, 0xE0, 0xB8, 0xA2,
	0xE0, 0xB9, 0x8C, 0xE0, 0xB8, 0xAA, 0xE0, 0xB8, 0xB8, 0xE0, 0xB8, 0x94,
	0xE0, 0xB8, 0x9B, 0xE0, 0xB8, 0xA3, 0xE0, 0xB8, 0xB0, 0xE0, 0xB9, 0x80,
	0xE0, 0xB8, 0xAA, 0xE0, 0xB8, 0xA3, 0xE0, 0xB8, 0xB4, 0xE0, 0xB8, 0x90,
	0xE0, 0xB9, 0x80, 0xE0, 0xB8, 0xA5, 0xE0, 0xB8, 0xB4, 0xE0, 0xB8, 0xA8,
	0xE0, 0xB8, 0x84, 0xE0, 0xB8, 0xB8, 0xE0, 0xB8, 0x93, 0xE0, 0xB8, 0x84,
	0xE0, 0xB9, 0x88, 0xE0, 0xB8, 0xB2, 0x20, 0x20, 0xE0, 0xB8, 0x81, 0xE0,
	0xB8, 0xA7, 0xE0, 0xB9, 0x88, 0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0x9A, 0xE0,
	0xB8, 0xA3, 0xE0, 0xB8, 0xA3, 0xE0, 0xB8, 0x94, 0xE0, 0xB8, 0xB2, 0xE0,
	0xB8, 0x9D, 0xE0, 0xB8, 0xB9, 0xE0, 0xB8, 0x87, 0xE0, 0xB8, 0xAA, 0xE0,
	0xB8, 0xB1, 0xE0, 0xB8, 0x95, 0xE0, 0xB8, 0xA7, 0xE0, 0xB9, 0x8C, 0xE0,
	0xB9, 0x80, 0xE0, 0xB8, 0x94, 0xE0, 0xB8, 0xA3, 0xE0, 0xB8, 0xB1, 0xE0,
	0xB8, 0x88, 0xE0, 0xB8, 0x89, 0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0x99, 0x0A,
	0xE0, 0xB8, 0x88, 0xE0, 0xB8, 0x87, 0xE0, 0xB8, 0x9D, 0xE0, 0xB9, 0x88,
	0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0x9F, 0xE0, 0xB8, 0xB1, 0xE0, 0xB8, 0x99,
	0xE0, 0xB8, 0x9E, 0xE0, 0xB8, 0xB1, 0xE0, 0xB8, 0x92, 0xE0, 0xB8, 0x99,
	0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0xA7, 0xE0, 0xB8, 0xB4, 0xE0, 0xB8, 0x8A,
	0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0x81, 0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0xA3,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xE0,
	0xB8, 0xAD, 0xE0, 0xB8, 0xA2, 0xE0, 0xB9, 0x88, 0xE0, 0xB8, 0xB2, 0xE0,
	0xB8, 0xA5, 0xE0, 0xB9, 0x89, 0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0x87, 0xE0,
	0xB8, 0x9C, 0xE0, 0xB8, 0xA5, 0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0x8D, 0xE0,
	0xB8, 0xA4, 0xE0, 0xB9, 0x85, 0xE0, 0xB9, 0x80, 0xE0, 0xB8, 0x82, 0xE0,
	0xB9, 0x88, 0xE0, 0xB8, 0x99, 0xE0, 0xB8, 0x86, 0xE0, 0xB9, 0x88, 0xE0,
	0xB8, 0xB2, 0xE0, 0xB8, 0x9A, 0xE0, 0xB8, 0xB5, 0xE0, 0xB8, 0x91, 0xE0,
	0xB8, 0xB2, 0xE0, 0xB9, 0x83, 0xE0, 0xB8, 0x84, 0xE0, 0xB8, 0xA3, 0x0A,
	0xE0, 0xB9, 0x84, 0xE0, 0xB8, 0xA1, 0xE0, 0xB9, 0x88, 0xE0, 0xB8, 0x96,
	0xE0, 0xB8, 0xB7, 0xE0, 0xB8, 0xAD, 0xE0, 0xB9, 0x82, 0xE0, 0xB8, 0x97,
	0xE0, 0xB8, 0xA9, 0xE0, 0xB9, 0x82, 0xE0, 0xB8, 0x81, 0xE0, 0xB8, 0xA3,
	0xE0, 0xB8, 0x98, 0xE0, 0xB9, 0x81, 0xE0, 0xB8, 0x8A, 0xE0, 0xB9, 0x88,
	0xE0, 0xB8, 0x87, 0xE0, 0xB8, 0x8B, 0xE0, 0xB8, 0xB1, 0xE0, 0xB8, 0x94,
	0xE0, 0xB8, 0xAE, 0xE0, 0xB8, 0xB6, 0xE0, 0xB8, 0x94, 0xE0, 0xB8, 0xAE,
	0xE0, 0xB8, 0xB1, 0xE0, 0xB8, 0x94, 0xE0, 0xB8, 0x94, 0xE0, 0xB9, 0x88,
	0xE0, 0xB8, 0xB2, 0x20, 0x20, 0x20, 0x20, 0x20, 0xE0, 0xB8, 0xAB, 0xE0,
	0xB8, 0xB1, 0xE0, 0xB8, 0x94, 0xE0, 0xB8, 0xAD, 0xE0, 0xB8, 0xA0, 0xE0,
	0xB8, 0xB1, 0xE0, 0xB8, 0xA2, 0xE0, 0xB9, 0x80, 0xE0, 0xB8, 0xAB, 0xE0,
	0xB8, 0xA1, 0xE0, 0xB8, 0xB7, 0xE0, 0xB8, 0xAD, 0xE0, 0xB8, 0x99, 0xE0,
	0xB8, 0x81, 0xE0, 0xB8, 0xB5, 0xE0, 0xB8, 0xAC, 0xE0, 0xB8, 0xB2, 0xE0,
	0xB8, 0xAD, 0xE0, 0xB8, 0xB1, 0xE0, 0xB8, 0x8A, 0xE0, 0xB8, 0x8C, 0xE0,
	0xB8, 0xB2, 0xE0, 0xB8, 0xAA, 0xE0, 0xB8, 0xB1, 0xE0, 0xB8, 0xA2, 0x0A,
	0xE0, 0xB8, 0x9B, 0xE0, 0xB8, 0x8F, 0xE0, 0xB8, 0xB4, 0xE0, 0xB8, 0x9A,
	0xE0, 0xB8, 0xB1, 0xE0, 0xB8, 0x95, 0xE0, 0xB8, 0xB4, 0xE0, 0xB8, 0x9B,
	0xE0, 0xB8, 0xA3, 0xE0, 0xB8, 0xB0, 0xE0, 0xB8, 0x9E, 0xE0, 0xB8, 0xA4,
	0xE0, 0xB8, 0x95, 0xE0, 0xB8, 0xB4, 0xE0, 0xB8, 0x81, 0xE0, 0xB8, 0x8E,
	0xE0, 0xB8, 0x81, 0xE0, 0xB8, 0xB3, 0xE0, 0xB8, 0xAB, 0xE0, 0xB8, 0x99,
	0xE0, 0xB8, 0x94, 0xE0, 0xB9, 0x83, 0xE0, 0xB8, 0x88, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0xE0, 0xB8, 0x9E, 0xE0, 0xB8, 0xB9, 0xE0,
	0xB8, 0x94, 0xE0, 0xB8, 0x88, 0xE0, 0xB8, 0xB2, 0xE0, 0xB9, 0x83, 0xE0,
	0xB8, 0xAB, 0xE0, 0xB9, 0x89, 0xE0, 0xB8, 0x88, 0xE0, 0xB9, 0x8A, 0xE0,
	0xB8, 0xB0, 0xE0, 0xB9, 0x86, 0x20, 0xE0, 0xB8, 0x88, 0xE0, 0xB9, 0x8B,
	0xE0, 0xB8, 0xB2, 0xE0, 0xB9, 0x86, 0x20, 0xE0, 0xB8, 0x99, 0xE0, 0xB9,
	0x88, 0xE0, 0xB8, 0xB2, 0xE0, 0xB8, 0x9F, 0xE0, 0xB8, 0xB1, 0xE0, 0xB8,
	0x87, 0xE0, 0xB9, 0x80, 0xE0, 0xB8, 0xAD, 0xE0, 0xB8, 0xA2, 0x20, 0xE0,
	0xB8, 0xAF, 0x0A, 0x50, 0x69, 0x6A, 0x61, 0x6D, 0x61, 0x6C, 0xC4, 0xB1,
	0x20, 0x68, 0x61, 0x73, 0x74, 0x61, 0x2C, 0x20, 0x79, 0x61, 0x67, 0xCC,
	0x86, 0xC4, 0xB1, 0x7A, 0x20, 0x73, 0xCC, 0xA7, 0x6F, 0x66, 0x6F, 0xCC,
	0x88, 0x72, 0x65, 0x20, 0x63, 0xCC, 0xA7, 0x61, 0x62, 0x75, 0x63, 0x61,
	0x6B, 0x20, 0x67, 0x75, 0xCC, 0x88, 0x76, 0x65, 0x6E, 0x64, 0x69, 0x2E,
	0x00
}; // 2412 bytes + \0, 1490 code points, 1391 chars




static struct {
	const char * string;
	size_t byteCount;
	size_t codepointCount;
	size_t charaterCount;
} const testStringsNFC[ ] = {
	{ composedUTF8TestString1, 508, 212, 212 },
	{ composedUTF8TestString2, 313, 156, 156 },
	{ composedUTF8TestString3, 2305, 1391, 1313 },
	{ NULL, 0, 0, 0 }
};



static struct {
	const char * string;
	size_t byteCount;
	size_t codepointCount;
	size_t charaterCount;
} const testStringsNFD[ ] = {
	{ decomposedUTF8TestString1, 525, 242, 212 },
	{ decomposedUTF8TestString2, 331, 178, 156 },
	{ decomposedUTF8TestString3, 2412, 1490, 1313 },
	{ NULL, 0, 0, 0 }
};
